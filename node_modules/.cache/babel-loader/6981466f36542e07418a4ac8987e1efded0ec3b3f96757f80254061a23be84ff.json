{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\react\\\\Player\\\\player\\\\src\\\\Components\\\\Player\\\\Player.js\";\n// import React, { Component } from 'react'\n// import { PlayerWrapper, StyledPlayer } from './Player.styled'\n\n// class Player extends Component {\n\n// state = {\n//     isVideoLoaded: false,\n// }\n\n// componentDidUpdate(prevProps) {\n//     if(prevProps.url !== this.props.url) {\n//         this.setState({isVideoLoaded: false})\n//     }\n// }\n\n// render() {\n//         const {isVideoLoaded} = this.state\n//         const {url} = this.props\n//         const showLoader = url && !isVideoLoaded\n//         const playerSize = isVideoLoaded ? '100%' : 0\n\n//   return (\n//     <div>\n//         {showLoader && <h2>Load video</h2>}\n//         {url && (\n//         <PlayerWrapper>\n//             <StyledPlayer \n//             url={url} \n//             controls \n//             onReady={() => this.setState({isVideoLoaded: true})}\n//             width={playerSize}\n//             height={playerSize}\n//             />\n//         </PlayerWrapper>\n//         )}\n//  </div>\n//     )\n\n//     }\n// }\n\n// export default Player\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Player = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_c = Player;\nexport default Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Player","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/Documents/react/Player/player/src/Components/Player/Player.js"],"sourcesContent":["// import React, { Component } from 'react'\r\n// import { PlayerWrapper, StyledPlayer } from './Player.styled'\r\n\r\n// class Player extends Component {\r\n\r\n// state = {\r\n//     isVideoLoaded: false,\r\n// }\r\n\r\n// componentDidUpdate(prevProps) {\r\n//     if(prevProps.url !== this.props.url) {\r\n//         this.setState({isVideoLoaded: false})\r\n//     }\r\n// }\r\n\r\n// render() {\r\n//         const {isVideoLoaded} = this.state\r\n//         const {url} = this.props\r\n//         const showLoader = url && !isVideoLoaded\r\n//         const playerSize = isVideoLoaded ? '100%' : 0\r\n        \r\n//   return (\r\n//     <div>\r\n//         {showLoader && <h2>Load video</h2>}\r\n//         {url && (\r\n//         <PlayerWrapper>\r\n//             <StyledPlayer \r\n//             url={url} \r\n//             controls \r\n//             onReady={() => this.setState({isVideoLoaded: true})}\r\n//             width={playerSize}\r\n//             height={playerSize}\r\n//             />\r\n//         </PlayerWrapper>\r\n//         )}\r\n//  </div>\r\n//     )\r\n\r\n//     }\r\n// }\r\n\r\n// export default Player\r\nimport React from 'react'\r\n\r\nconst Player = () => {\r\n  return (\r\n    <div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Player\r\n"],"mappings":";AAAA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EACnB,oBACED,OAAA;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAEV,CAAC;AAAAC,EAAA,GANKL,MAAM;AAQZ,eAAeA,MAAM;AAAA,IAAAK,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}